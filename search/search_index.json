{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Allure AI Business Suite is our offering that enables you to leverage our AI-driven technology for your use case.</p>"},{"location":"#getting-access","title":"Getting access","text":"<p>To gain access to Allure AI Business Suite, place contact Al Varrel at varrel@allure.id.</p>"},{"location":"dashboard/","title":"Introduction","text":"<p>Business Suite Dashboard allows you to manage and configure your own Widget Placements.</p>"},{"location":"reviews/","title":"Custom Reviews Source","text":"<p>Allure AI Business Suite allows you to display self-sourced product reviews in widgets. Currently, only Skincare Analyzer widget supports displaying product reviews.</p> <p>Reviews are served using an HTTP endpoint that will be invoked upon widget load. The endpoint needs to adhere to a specific set of requirements.</p>"},{"location":"reviews/configuration/","title":"Configuring Custom Product Review Sources","text":"<p>TODO</p>"},{"location":"reviews/endpoint/","title":"Review Endpoint Specification","text":""},{"location":"reviews/endpoint/#request-specifications","title":"Request specifications","text":"<p>Business Suite will send an HTTP GET request to the endpoint specified in the Business Suite Dashboard. </p> <p>The server must respond within 5 seconds, otherwise the reviews will not be displayed.</p>"},{"location":"reviews/endpoint/#query-parameters","title":"Query parameters","text":"Param Type Description <code>articleNo</code> <code>string</code> Allure Article Number (AAN) of the referenced product. <code>locale</code> <code>string</code> Locale of the widget. Currently, only <code>id_ID</code> is supported. <code>offset</code> <code>number</code> Offset number for pagination, starts from 0. <code>limit</code> <code>number</code> Number of reviews to fetch. <code>filter_[filterKey]</code> <code>string</code> Custom filter picked by the user. For example, if the filter key is <code>skintype</code>, the parameter name will be <code>filter_skintype</code>. <code>sort_[sortKey]</code> <code>string</code> Custom sort picked by the user. For example, if the filter key is <code>rating</code>, the parameter name will be <code>sort_rating</code>."},{"location":"reviews/endpoint/#example","title":"Example","text":"<ul> <li>Endpoint: <code>https://api.acme.com/reviews</code></li> <li>Article No: <code>PSA00000001</code></li> <li>Applied filters:<ul> <li><code>skintype</code> = <code>sensitive</code></li> <li><code>recommend</code> = <code>yes</code></li> </ul> </li> <li>Applied sorts:<ul> <li><code>rating</code> = <code>ascending</code></li> </ul> </li> </ul> <p>The request URL becomes: <pre><code>https://api.acme.com/reviews?articleNo=PSA00000001&amp;offset=0&amp;limit=10&amp;locale=id_ID&amp;filter_skintype=sensitive&amp;filter_recommend=yes&amp;sort_rating=ascending\n</code></pre></p>"},{"location":"reviews/endpoint/#response-specification","title":"Response specification","text":"<p>The endpoint shall return a schema.org-compliant JSON object with type <code>Product</code>.</p> <pre><code>{\n\"@context\": \"https://schema.org\",\n\"@type\": \"Product\",\n\"aggregateRating\": {\n\"@type\": \"AggregateRating\",\n\"ratingCount\": 100,\n\"ratingValue\": 4,\n\"worstRating\": 0,\n\"bestRating\": 5\n},\n\"review\": [\n// Array of reviews, see below for Review body\n]\n}\n</code></pre>"},{"location":"reviews/endpoint/#individual-review-format","title":"Individual Review format","text":"<pre><code>{\n\"@context\": \"https://schema.org\",\n\"@type\": \"Review\",\n\"author\": {\n\"@type\": \"Person\",\n\"name\": \"John Doe\",\n\"image\": \"https://image.org/image.png\",\n\"url\": \"https://example.com/link-to-user-profile-page\",\n\"allure:annotations\": [\n\"Kulit Sensitif\",\n\"&gt; 40 tahun\"\n]\n},\n\"datePublished\": \"2022-01-01\",\n\"reviewBody\": \"This is review body\",\n\"reviewRating\": {\n\"@type\": \"Rating\",\n\"ratingValue\": 4,\n\"worstRating\": 0,\n\"bestRating\": 5\n},\n\"allure:additionalComponents\": [\n{\n\"title\": \"Akan beli lagi?\",\n\"value\": \"Ya\"\n}\n],\n\"allure:photos\": [\n\"https://url-to/photos1.jpg\",\n\"https://url-to/photos2.jpg\"\n]\n}\n</code></pre>"},{"location":"sdk/node/","title":"Setup","text":"<p>We provide a Node.js client library to access our APIs. Here are the APIs you can access using this library:</p> <ol> <li>Beauty Product Database - used to retrieve beauty product details (including name, brand, ingredients, etc.)</li> <li>Facial Check Service - used to initiate facial check request to assess skin condition scores.</li> <li>Product Suitability Service - used to calculate product suitability scores.</li> <li>Widget Service - used to retrieve widget placement details.</li> </ol>"},{"location":"sdk/node/#installation","title":"Installation","text":"<pre><code>npm install @allure-ai/sdk\n</code></pre> <p>Or, if you're using yarn: <pre><code>yarn add @allure-ai/sdk\n</code></pre></p>"},{"location":"sdk/node/#authorization","title":"Authorization","text":""},{"location":"sdk/node/#use-within-external-environments","title":"Use within external environments","text":"<p>You need an API key to access the resources. The API key can be configured when instantiating the library class, for example: <pre><code>const service = new BeautyProductDatabase({\napiKey: 'your-api-key'\n});\n</code></pre></p> <p>Contact us to get the API key.</p>"},{"location":"sdk/node/#use-within-allure-ai-managed-environment","title":"Use within Allure AI Managed Environment","text":"<p>If you're using the library within Allure AI Managed Environment, the production credentials will be set automatically upon deployment. For the development credentials, you can use AWS CLI to set the necessary AWS credentials.</p> <p>If you're using AWS SSO to login, don't forget to set the <code>AWS_PROFILE</code> environment variable: <pre><code>export AWS_PROFILE=sso\n</code></pre></p>"},{"location":"sdk/node/bpd/","title":"Beauty Product Database","text":"<p>This module is used to retrieve details of beauty products in our database.</p>"},{"location":"sdk/node/bpd/#retrieving-article-by-article-no-aan","title":"Retrieving Article by Article No (AAN)","text":"<p>An item in the Beauty Product Database (e.g. skincare product, ingredient) is known as an Article. Each Article is identified by its Article No (AAN). You can use <code>retrieveArticle</code> method to retrieve up to 100 articles at once.</p> <pre><code>import BeautyProductDatabase, { ArticleType, SkincareProduct } from '@allure-ai/sdk/services/BeautyProductDatabase';\nimport apiConfig from './apiConfig';\nconst service = new BeautyProductDatabase(apiConfig);\nasync function getSkincareProducts(articleNo: string[]): Promise&lt;Partial&lt;SkincareProduct&gt;[]&gt; {\nconst articles = await service.retrieveArticles&lt;SkincareProduct&gt;(ArticleType.SkincareProduct, articleNo);\nreturn articles;\n}\n</code></pre> <p>You can also specify the fields to get only what you need. <pre><code>// ...\nconst fields = ['article_no', 'name'];\nconst articles = await service.retrieveArticles&lt;SkincareProduct&gt;(ArticleType.SkincareProduct, articleNo, fields);\n// ...\n</code></pre></p> <p>Note that the return value of <code>retrieveArticles</code> is <code>Partial&lt;T&gt;</code>, since you may pick which attributes to retrieve at runtime.</p>"},{"location":"sdk/node/bpd/#article-types","title":"Article Types","text":"<p>TODO</p>"},{"location":"sdk/node/facial-check-service/","title":"Facial Check Service","text":"<p>The Facial Check Service can be used to initiate a job in which a facial photo is assessed to get the user's skin condition.</p>"},{"location":"sdk/node/facial-check-service/#begin-asynchronous-facial-check-job","title":"Begin asynchronous Facial Check job","text":"<p>The job will run asynchronously, and an HTTP webhook will be called upon success or failure.</p> <pre><code>import FacialCheckService, { FacialCheckComponent } from '@allure-ai/sdk/services/FacialCheckService';\nimport apiConfig from './apiConfig';\nconst service = new FacialCheckService(apiConfig);\nservice.beginInference({\ncallbackUrl: 'https://your-callback-url/callback',\nphotoUrl: 'https://url-to-your-selfie/photo.jpg',\nwithVisualization: true,\ncomponents: [\nFacialCheckComponent.ACNE,\nFacialCheckComponent.WRINKLE\n]\n})\n</code></pre> <p>Details on the content of the webhook body can be seen on the API Reference.</p>"},{"location":"sdk/node/product-suitability-service/","title":"Product Suitability Service","text":"<p>The Product Suitability Service can be used to initiate a job to determine the how suitable a product is to the user.</p>"},{"location":"sdk/node/product-suitability-service/#assess-skincare-product-suitability","title":"Assess skincare product suitability","text":"<p>The job will run asynchronously, and an HTTP webhook will be called upon success or failure.</p> <pre><code>import ProductSuitabilityService, { GenderEnum, SkinOilinessEnum, SkinSensitivityEnum, SkinGoalsEnum } from '@allure-ai/sdk/services/ProductSuitabilityService';\nimport apiConfig from './apiConfig';\nconst service = new ProductSuitabilityService(apiConfig);\nservice.calculateSkincareProductSuitability({\ncallbackUrl: 'https://your-callback-url/callback',\narticleNo: ['PSA0000000001', 'PSA0000000012'],   // Define the article no of skincare products to assess\nuser: {\ngender: GenderEnum.MALE,\nage: 23,\nhalalPreference: true,\ncrueltyFreePreference: false,\nparabenFreePreference: true,\npregnantPreference: false,\noilinessVerdict: SkinOilinessEnum.OILY,\nsensitivityVerdict: SkinSensitivityEnum.SENSITIVE,\nskinProblemsToSolve: [\nSkinGoalsEnum.FIGHTING_ACNE,\nSkinGoalsEnum.REMOVING_ACNE_MARKS\n],\nbudgetMin: 20000,\nbudgetMax: 50000,\nacneScore: 98,\nwrinkleScore: 75,\ndarkspotScore: 95,\ndarkCircleScore: 48\n}\n})\n</code></pre> <p>Details on the content of the webhook body can be seen on the API Reference.</p>"},{"location":"sdk/node/widget-service/","title":"Widget Service","text":"<p>The Widget Service is used to retrieve the details of a Widget Placement. This includes a list of entitled products, theme, allowed origins, etc.</p>"},{"location":"sdk/node/widget-service/#importing-the-library","title":"Importing the library","text":"<pre><code>import WidgetService from '@allure-ai/sdk/services/WidgetService';\nimport apiConfig from './apiConfig';\nconst widgetService = new WidgetService(apiConfig);\n</code></pre>"},{"location":"sdk/node/widget-service/#retrieving-widget-placements","title":"Retrieving widget placements","text":""},{"location":"sdk/node/widget-service/#retrieving-skincare-analyzer-widget-placement","title":"Retrieving Skincare Analyzer widget placement","text":"<pre><code>const placement = await widgetService.retrieveSkincareAnalyzerWidgetPlacement(placementId);\n</code></pre>"},{"location":"sdk/node/widget-service/#retrieving-foundation-shade-finder-widget-placement","title":"Retrieving Foundation Shade Finder widget placement","text":"<pre><code>const placement = await widgetService.retrieveFoundationFinderWidgetPlacement(placementId);\n</code></pre>"},{"location":"sdk/node/widget-service/#retrieving-ar-makeup-tryon-widget-placement","title":"Retrieving AR Makeup Tryon widget placement","text":"<pre><code>const placement = await widgetService.retrieveARMakeupTryonWidgetPlacement(placementId);\n</code></pre>"},{"location":"sdk/node/widget-service/#retrieving-main-menu-widget-placement","title":"Retrieving Main Menu widget placement","text":"<pre><code>const placement = await widgetService.retrieveMainMenuWidgetPlacement(placementId);\n</code></pre>"},{"location":"sdk/node/widget-service/#retrieving-product-overrides","title":"Retrieving product overrides","text":"<p>The Business Suite provides a way for tenants to customize some product data, which is called the Product Override Set. Given the tenant ID, product override set ID, and the product's article no, you can use the library to fetch the overriden data.</p>"},{"location":"sdk/node/widget-service/#skincare-product-override","title":"Skincare product override","text":"<pre><code>const articleNo = \"PSA000001010\";\nconst tenantId = \"tenant\";\nconst overrideId = \"20fb655a-ca00-4dea-922e-80a2c7497674\";\nconst productOverrideData = await widgetService.retrieveSkincareProductOverride(tenantId, overrideId, articleNo)\n</code></pre>"},{"location":"sdk/node/widget-service/#makeup-product-override","title":"Makeup product override","text":"<pre><code>const articleNo = \"PMA000001010\";\nconst tenantId = \"tenant\";\nconst overrideId = \"20fb655a-ca00-4dea-922e-80a2c7497674\";\nconst productOverrideData = await widgetService.retrieveMakeupProductOverride(tenantId, overrideId, articleNo)\n</code></pre>"},{"location":"widgets/ar-makeup/","title":"Intro to AR Makeup Try-on","text":"<p>TODO</p>"},{"location":"widgets/ar-makeup/embed/","title":"Embedding the Widget to a Web Page","text":"<p>The widget can be embedded as a part of your own web page, similar to an embedded YouTube video. You can embed the widget using the following embed script:</p> <pre><code>&lt;script type=\"text/javascript\" src=\"https://business.allure.id/scripts/embed/armakeup.js\"&gt;&lt;/script&gt;\n&lt;div id=\"allure-embed-armakeup\"&gt;&lt;/div&gt;\n&lt;script&gt;\nvar widgetOptions = {\nplacementId: '[widget placement ID]'\n}\nnew AllureARMakeupTryonWidget(widgetOptions).render(document.getElementById('allure-embed-armakeup'));\n&lt;/script&gt;\n</code></pre>"},{"location":"widgets/ar-makeup/embed/#widget-options","title":"Widget Options","text":"<p>There are several options you can set to configure the widget behavior.</p> Option Name Type Description <code>key</code> (required) <code>string</code> Placement ID of the widget, obtained from Business Suite Dashboard. <code>width</code> <code>number | string</code> Width of the widget, default is \"100%\" <code>height</code> <code>number</code> Height of the widget, if unset the height is automatically adjusted according to the widget content. <code>productCtaLabel</code> <code>string</code> Override the buy button text, default is \"Beli Produk\" <code>onProductCtaClicked</code> <code>(product) =&gt; void</code> A callback invoked when a user clicks on the CTA button, overriding the default buy links popover."},{"location":"widgets/ar-makeup/embed/#cta-clicked-callback","title":"CTA clicked callback","text":"<p>This callback will be invoked when the user clicks on the CTA button. The callback shall have the following signature:</p> <pre><code>const onProductCtaClicked = (product) =&gt; {\nconsole.log(product)\n}\n</code></pre>"},{"location":"widgets/ar-makeup/embed/#product-payload","title":"Product Payload","text":"Key Type Description <code>articleNo</code> <code>string</code> Allure Article Number (AAN) for the product. <code>skuNo</code> <code>string | undefined</code> Custom SKU number as defined in a Product Override Set. <code>name</code> <code>string</code> Product name (without brand name). <code>brandName</code> <code>string</code> Brand name."},{"location":"widgets/foundation/","title":"Intro to Foundation Shade Finder","text":"<p>TODO</p>"},{"location":"widgets/foundation/embed/","title":"Embedding the Widget to a Web Page","text":"<p>The widget can be embedded as a part of your own web page, similar to an embedded YouTube video. You can embed the widget using the following embed script:</p> <pre><code>&lt;script type=\"text/javascript\" src=\"https://business.allure.id/scripts/embed/foundationfinder.js\"&gt;&lt;/script&gt;\n&lt;div id=\"allure-embed-foundationfinder\"&gt;&lt;/div&gt;\n&lt;script&gt;\nvar widgetOptions = {\nplacementId: '[widget placement ID]'\n}\nnew AllureFoundationShadeFinderWidget(widgetOptions).render(document.getElementById('allure-embed-foundationfinder'));\n&lt;/script&gt;\n</code></pre>"},{"location":"widgets/foundation/embed/#widget-options","title":"Widget Options","text":"<p>There are several options you can set to configure the widget behavior.</p> Option Name Type Description <code>key</code> (required) <code>string</code> Placement ID of the widget, obtained from Business Suite Dashboard. <code>width</code> <code>number | string</code> Width of the widget, default is \"100%\" <code>height</code> <code>number</code> Height of the widget, if unset the height is automatically adjusted according to the widget content. <code>productCtaLabel</code> <code>string</code> Override the buy button text, default is \"Beli Produk\" <code>onProductCtaClicked</code> <code>(product) =&gt; void</code> A callback invoked when a user clicks on the CTA button, overriding the default buy links popover."},{"location":"widgets/foundation/embed/#cta-clicked-callback","title":"CTA clicked callback","text":"<p>This callback will be invoked when the user clicks on the CTA button. The callback shall have the following signature:</p> <pre><code>const onProductCtaClicked = (product) =&gt; {\nconsole.log(product)\n}\n</code></pre>"},{"location":"widgets/foundation/embed/#product-payload","title":"Product Payload","text":"Key Type Description <code>articleNo</code> <code>string</code> Allure Article Number (AAN) for the product. <code>skuNo</code> <code>string | undefined</code> Custom SKU number as defined in a Product Override Set. <code>name</code> <code>string</code> Product name (without brand name). <code>brandName</code> <code>string</code> Brand name."},{"location":"widgets/menu/","title":"Intro to Main Menu","text":"<p>TODO</p>"},{"location":"widgets/menu/embed/","title":"Embedding the Widget to a Web Page","text":"<p>The widget can be embedded as a part of your own web page, similar to an embedded YouTube video. You can embed the widget using the following embed script:</p> <pre><code>&lt;script type=\"text/javascript\" src=\"https://business.allure.id/scripts/embed/mainmenu.js\"&gt;&lt;/script&gt;\n&lt;div id=\"allure-embed-mainmenu\"&gt;&lt;/div&gt;\n&lt;script&gt;\nvar widgetOptions = {\nplacementId: '[widget placement ID]'\n}\nnew AllureMainMenuWidget(widgetOptions).render(document.getElementById('allure-embed-mainmenu'));\n&lt;/script&gt;\n</code></pre>"},{"location":"widgets/menu/embed/#widget-options","title":"Widget Options","text":"<p>There are several options you can set to configure the widget behavior.</p> Option Name Type Description <code>key</code> (required) <code>string</code> Placement ID of the widget, obtained from Business Suite Dashboard. <code>width</code> <code>number | string</code> Width of the widget, default is \"100%\" <code>height</code> <code>number</code> Height of the widget, if unset the height is automatically adjusted according to the widget content."},{"location":"widgets/skincare/","title":"Intro to Skincare Analyzer","text":"<p>The Skincare Analyzer widget is used to analyze user's selfie photo and preferences, and assigns a suitability score to each product sold in a retail store or e-commerce website.</p>"},{"location":"widgets/skincare/#setting-up-widget-placement","title":"Setting up Widget Placement","text":"<p>The placement of a widget is identified by its Placement ID obtained from the Business Suite Dashboard. To obtain access to our Business Suite Dashboard, contact us.</p>"},{"location":"widgets/skincare/configure/","title":"Configuring Skincare Analyzer Widgets","text":"<p>The Widget Placements can be configured through the Business Suite Dashboard.</p>"},{"location":"widgets/skincare/configure/#creating-placement","title":"Creating Placement","text":"<p>TODO</p>"},{"location":"widgets/skincare/configure/#configuring-placement","title":"Configuring Placement","text":""},{"location":"widgets/skincare/configure/#placement-mode","title":"Placement mode","text":""},{"location":"widgets/skincare/configure/#allowed-origins","title":"Allowed origins","text":""},{"location":"widgets/skincare/configure/#widget-entrypoint","title":"Widget entrypoint","text":""},{"location":"widgets/skincare/configure/#widget-theme","title":"Widget theme","text":""},{"location":"widgets/skincare/configure/#product-data-override-set","title":"Product data override set","text":""},{"location":"widgets/skincare/configure/#primary-categories","title":"Primary categories","text":""},{"location":"widgets/skincare/configure/#intro-body","title":"Intro body","text":""},{"location":"widgets/skincare/configure/#setting-product-entitlements","title":"Setting Product Entitlements","text":"<p>TODO</p>"},{"location":"widgets/skincare/configure/#feature-toggles","title":"Feature Toggles","text":"<p>TODO</p>"},{"location":"widgets/skincare/embed-legacy/","title":"Embedding the Widget to a Web Page (Legacy)","text":"<p>The widget can be embedded as a part of your own web page, similar to an embedded YouTube video. You can embed the widget using the following embed script:</p> <pre><code>&lt;script type=\"text/javascript\" src=\"https://embed.allure.id/scripts/embed/skinanalyzer.js\"&gt;&lt;/script&gt;\n&lt;div id=\"allure-embed\"&gt;&lt;/div&gt;\n&lt;script&gt;\nvar widgetOptions = {\nkey: '[widget placement ID]'\n}\nnew AllureSkincareAnalyzerWidget(widgetOptions).render(document.getElementById('allure-embed'));\n&lt;/script&gt;\n</code></pre>"},{"location":"widgets/skincare/embed-legacy/#widget-options","title":"Widget Options","text":"<p>There are several options you can set to configure the widget behavior.</p> Option Name Type Description <code>key</code> (required) <code>string</code> Placement ID of the widget, obtained from Business Suite Dashboard. <code>width</code> <code>number | string</code> Width of the widget, default is \"100%\" <code>height</code> <code>number</code> Height of the widget, if unset the height is automatically adjusted according to the widget content. <code>productCtaLabel</code> <code>string</code> Override the buy button text, default is \"Beli Produk\" <code>onProductCtaClicked</code> <code>(product) =&gt; void</code> A callback invoked when a user clicks on the CTA button, overriding the default buy links popover. <code>onAnalysisComplete</code> <code>(analysis) =&gt; void</code> A callback invoked when the analysis flow is complete."},{"location":"widgets/skincare/embed-legacy/#cta-clicked-callback","title":"CTA clicked callback","text":"<p>This callback will be invoked when the user clicks on the CTA button. The callback shall have the following signature:</p> <pre><code>const onProductCtaClicked = (product) =&gt; {\nconsole.log(product)\n}\n</code></pre>"},{"location":"widgets/skincare/embed-legacy/#product-payload","title":"Product Payload","text":"Key Type Description <code>articleNo</code> <code>string</code> Allure Article Number (AAN) for the product. <code>skuNo</code> <code>string | undefined</code> Custom SKU number as defined in a Product Override Set. <code>name</code> <code>string</code> Product name (without brand name). <code>brandName</code> <code>string</code> Brand name."},{"location":"widgets/skincare/embed-legacy/#analysis-complete-callback","title":"Analysis complete callback","text":"<p>This callback will be invoked when the analysis flow is complete. The callback shall have the following signature:</p> <pre><code>const onAnalysisComplete = (analysis) =&gt; {\nconsole.log(analysis)\n}\n</code></pre>"},{"location":"widgets/skincare/embed-legacy/#analysis-payload","title":"Analysis Payload","text":"Key Type Description <code>analysisKey</code> <code>string</code> Analysis unique identifier. <code>skinSurvey</code> <code>SkinSurvey</code> Skin survey data. <code>facialCheck</code> <code>FacialCheck</code> Facial check scores. <code>productSuitability</code> <code>Array&lt;[string, number]&gt;</code> An array of Article No and Score pairs."},{"location":"widgets/skincare/embed-legacy/#skinsurvey-payload","title":"<code>SkinSurvey</code> Payload","text":"Key Type Description <code>age</code> <code>number</code> User age. <code>gender</code> <code>string</code> Gender, enum: <code>MALE</code>, <code>FEMALE</code>, or <code>UNKNOWN</code> <code>skinSensitivityVerdict</code> <code>string</code> Skin sensitivity, enum: <code>SENSITIVE</code> or <code>RESISTANT</code> <code>skinOilinessVerdict</code> <code>string</code> Skin oiliness, enum: <code>DRY</code>, <code>NORMAL</code>, or <code>OILY</code> <code>skinGoals</code> <code>Array&lt;string&gt;</code> Skin goals, enum: <code>BRIGHTENING</code>, <code>FIGHTING_ACNE</code>, <code>FIGHTING_AGING</code>, <code>IMPROVING_SKIN_TEXTURE</code>, <code>REMOVING_ACNE_MARKS</code>, <code>REMOVING_COMEDO</code>, <code>SKIN_FEELS_DRY</code>, <code>SKIN_LOOKS_DULL</code>, or <code>SUNLIGHT_PROTECTION</code> <code>specialPreferences</code> <code>Array&lt;string&gt;</code> Special preferences, enum: <code>PARABEN_FREE</code>, <code>CRUELTY_FREE</code>, <code>HALAL_PREFERENCE</code>, <code>PREGNANT</code> <code>minBudget</code> <code>number</code> Minimum budget in IDR <code>maxBudget</code> <code>number</code> Maximum budget in IDR <code>contact</code> <code>Contact</code> Contact information payload"},{"location":"widgets/skincare/embed-legacy/#facialcheck-payload","title":"<code>FacialCheck</code> Payload","text":"Key Type Description <code>acne</code> <code>number</code> Acne score, range: 0 (bad) to 100 (great). <code>wrinkle</code> <code>number</code> Wrinkle score, range: 0 (bad) to 100 (great). <code>darkspot</code> <code>number</code> Darkspot score, range: 0 (bad) to 100 (great). <code>darkCircle</code> <code>number</code> Dark circle score, range: 0 (bad) to 100 (great). <code>redness</code> <code>number</code> Redness score, range: 0 (bad) to 100 (great). <code>oiliness</code> <code>number</code> Oiliness score, range: 0 (bad) to 100 (great)."},{"location":"widgets/skincare/embed-legacy/#product-suitability-payload","title":"Product Suitability Payload","text":"<p>The <code>productSuitability</code> payload contains an array of pairs. The first element of the pair is the Article No, and the second element is the match score. It is sorted descending by score.</p>"},{"location":"widgets/skincare/embed-legacy/#contact-payload","title":"Contact Payload","text":"Key Type Description <code>name</code> <code>string</code> Contact name."},{"location":"widgets/skincare/embed-legacy/#example-payload","title":"Example Payload","text":"<pre><code>{\n\"analysisKey\": \"a23f099a-a743-4bf6-8156-c34ebc21eb72\",\n\"skinSurvey\": {\n\"age\": 23,\n\"gender\": \"MALE\",\n\"skinSensitivityVerdict\": \"SENSITIVE\",\n\"skinOilinessVerdict\": \"OILY\",\n\"skinGoals\": [\n\"FIGHTING_ACNE\",\n\"REMOVING_ACNE_MARKS\",\n\"SUNLIGHT_PROTECTION\"\n],\n\"specialPreferences\": [\"HALAL\"],\n\"minBudget\": 150000,\n\"maxBudget\": 500000,\n\"contact\": {\n\"name\": \"John Doe\"\n}\n},\n\"facialCheck\": {\n\"acne\": 93,\n\"wrinkle\": 100,\n\"darkspot\": 57,\n\"darkCircle\": 71,\n\"redness\": 98,\n\"oiliness\": 98\n},\n\"productSuitability\": [\n[\"PSA00000457\", 63],\n[\"PSA00000458\", 62],\n[\"PSA00000493\", 62],\n[\"PSA00000456\", 61],\n[\"PSA00000463\", 58],\n[\"PSA00000461\", 57],\n[\"PSA00000465\", 56],\n[\"PSA00000479\", 40],\n[\"PSA00000481\", 32],\n[\"PSA00000482\", 31], ]\n}\n</code></pre>"},{"location":"widgets/skincare/embed/","title":"Embedding the Widget to a Web Page","text":"<p>The widget can be embedded as a part of your own web page, similar to an embedded YouTube video. You can embed the widget using the following embed script:</p> <pre><code>&lt;script type=\"text/javascript\" src=\"https://business.allure.id/scripts/embed/skincareanalyzer.js\"&gt;&lt;/script&gt;\n&lt;div id=\"allure-embed-skincareanalyzer\"&gt;&lt;/div&gt;\n&lt;script&gt;\nvar widgetOptions = {\nplacementId: '[widget placement ID]'\n}\nnew AllureSkincareAnalyzerWidget(widgetOptions).render(document.getElementById('allure-embed-skincareanalyzer'));\n&lt;/script&gt;\n</code></pre>"},{"location":"widgets/skincare/embed/#widget-options","title":"Widget Options","text":"<p>There are several options you can set to configure the widget behavior.</p> Option Name Type Description <code>placementId</code> (required) <code>string</code> Placement ID of the widget, obtained from Business Suite Dashboard. <code>width</code> <code>number | string</code> Width of the widget, default is \"100%\" <code>height</code> <code>number</code> Height of the widget, if unset the height is automatically adjusted according to the widget content. <code>productCtaLabel</code> <code>string</code> Override the buy button text, default is \"Beli Produk\" <code>onProductCtaClicked</code> <code>(product) =&gt; void</code> A callback invoked when a user clicks on the CTA button, overriding the default buy links popover. <code>onAnalysisComplete</code> <code>(analysis) =&gt; void</code> A callback invoked when the analysis flow is complete."},{"location":"widgets/skincare/embed/#cta-clicked-callback","title":"CTA clicked callback","text":"<p>This callback will be invoked when the user clicks on the CTA button. The callback shall have the following signature:</p> <pre><code>const onProductCtaClicked = (product) =&gt; {\nconsole.log(product)\n}\n</code></pre>"},{"location":"widgets/skincare/embed/#product-payload","title":"Product Payload","text":"Key Type Description <code>articleNo</code> <code>string</code> Allure Article Number (AAN) for the product. <code>skuNo</code> <code>string | undefined</code> Custom SKU number as defined in a Product Override Set. <code>name</code> <code>string</code> Product name (without brand name). <code>brandName</code> <code>string</code> Brand name."},{"location":"widgets/skincare/embed/#analysis-complete-callback","title":"Analysis complete callback","text":"<p>This callback will be invoked when the analysis flow is complete. The callback shall have the following signature:</p> <pre><code>const onAnalysisComplete = (analysis) =&gt; {\nconsole.log(analysis)\n}\n</code></pre>"},{"location":"widgets/skincare/embed/#analysis-payload","title":"Analysis Payload","text":"Key Type Description <code>analysisKey</code> <code>string</code> Analysis unique identifier. <code>skinSurvey</code> <code>SkinSurvey</code> Skin survey data. <code>facialCheck</code> <code>FacialCheck</code> Facial check scores. <code>productSuitability</code> <code>Array&lt;[string, number]&gt;</code> An array of Article No and Score pairs."},{"location":"widgets/skincare/embed/#skinsurvey-payload","title":"<code>SkinSurvey</code> Payload","text":"Key Type Description <code>age</code> <code>number</code> User age. <code>gender</code> <code>string</code> Gender, enum: <code>MALE</code>, <code>FEMALE</code>, or <code>UNKNOWN</code> <code>skinSensitivityVerdict</code> <code>string</code> Skin sensitivity, enum: <code>SENSITIVE</code> or <code>RESISTANT</code> <code>skinOilinessVerdict</code> <code>string</code> Skin oiliness, enum: <code>DRY</code>, <code>NORMAL</code>, or <code>OILY</code> <code>skinGoals</code> <code>Array&lt;string&gt;</code> Skin goals, enum: <code>BRIGHTENING</code>, <code>FIGHTING_ACNE</code>, <code>FIGHTING_AGING</code>, <code>IMPROVING_SKIN_TEXTURE</code>, <code>REMOVING_ACNE_MARKS</code>, <code>REMOVING_COMEDO</code>, <code>SKIN_FEELS_DRY</code>, <code>SKIN_LOOKS_DULL</code>, or <code>SUNLIGHT_PROTECTION</code> <code>specialPreferences</code> <code>Array&lt;string&gt;</code> Special preferences, enum: <code>PARABEN_FREE</code>, <code>CRUELTY_FREE</code>, <code>HALAL_PREFERENCE</code>, <code>PREGNANT</code> <code>minBudget</code> <code>number</code> Minimum budget in IDR <code>maxBudget</code> <code>number</code> Maximum budget in IDR <code>contact</code> <code>Contact</code> Contact information payload"},{"location":"widgets/skincare/embed/#facialcheck-payload","title":"<code>FacialCheck</code> Payload","text":"Key Type Description <code>acne</code> <code>number</code> Acne score, range: 0 (bad) to 100 (great). <code>wrinkle</code> <code>number</code> Wrinkle score, range: 0 (bad) to 100 (great). <code>darkspot</code> <code>number</code> Darkspot score, range: 0 (bad) to 100 (great). <code>darkCircle</code> <code>number</code> Dark circle score, range: 0 (bad) to 100 (great). <code>redness</code> <code>number</code> Redness score, range: 0 (bad) to 100 (great). <code>oiliness</code> <code>number</code> Oiliness score, range: 0 (bad) to 100 (great)."},{"location":"widgets/skincare/embed/#product-suitability-payload","title":"Product Suitability Payload","text":"<p>The <code>productSuitability</code> payload contains an array of pairs. The first element of the pair is the Article No, and the second element is the match score. It is sorted descending by score.</p>"},{"location":"widgets/skincare/embed/#contact-payload","title":"Contact Payload","text":"Key Type Description <code>name</code> <code>string</code> Contact name."},{"location":"widgets/skincare/embed/#example-payload","title":"Example Payload","text":"<pre><code>{\n\"analysisKey\": \"a23f099a-a743-4bf6-8156-c34ebc21eb72\",\n\"skinSurvey\": {\n\"age\": 23,\n\"gender\": \"MALE\",\n\"skinSensitivityVerdict\": \"SENSITIVE\",\n\"skinOilinessVerdict\": \"OILY\",\n\"skinGoals\": [\n\"FIGHTING_ACNE\",\n\"REMOVING_ACNE_MARKS\",\n\"SUNLIGHT_PROTECTION\"\n],\n\"specialPreferences\": [\"HALAL\"],\n\"minBudget\": 150000,\n\"maxBudget\": 500000,\n\"contact\": {\n\"name\": \"John Doe\"\n}\n},\n\"facialCheck\": {\n\"acne\": 93,\n\"wrinkle\": 100,\n\"darkspot\": 57,\n\"darkCircle\": 71,\n\"redness\": 98,\n\"oiliness\": 98\n},\n\"productSuitability\": [\n[\"PSA00000457\", 63],\n[\"PSA00000458\", 62],\n[\"PSA00000493\", 62],\n[\"PSA00000456\", 61],\n[\"PSA00000463\", 58],\n[\"PSA00000461\", 57],\n[\"PSA00000465\", 56],\n[\"PSA00000479\", 40],\n[\"PSA00000481\", 32],\n[\"PSA00000482\", 31], ]\n}\n</code></pre>"}]}